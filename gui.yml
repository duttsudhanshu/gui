parameters:
- name: projectName
  displayName: Project Name
  type: string
  default: volte
  values:
  - volte
  - VoWifi
  - 5Gcore
  
- name: productName
  displayName: Product Name
  type: string
  default: CFX
  values:
  - CFX
  - TAS
  - NEF  
  
- name: releaseName
  displayName: release Name
  type: string
  default: 20.5
  values:
  - 20.5
  - 20.8
  - 21.0  

- name: Param1
  displayName: param1
  type: string
  default: volte
  values:
  - 20.5
  - 20.8
  - 21.0  


- name: Param2
  displayName: param2
  type: string
  default: volte
  values:
  - 20.5
  - 20.8
  - 21.0  


- name: Param3
  displayName: param3
  type: string
  default: volte
  values:
  - 20.5
  - 20.8
  - 21.0  



- name: Param4
  displayName: param4
  type: string
  default: volte
  values:
  - 20.5
  - 20.8
  - 21.0  


trigger: none

stages:

- stage: Requirement
  displayName: project Requirement
  pool:
    name: localhost
  jobs:
  - job: requirement
    displayName: Requirement    
    steps:
    - script: echo starting  $(Build.BuildNumber) with ${{ parameters.projectName }}      
   
- stage: Design
  displayName: Design
  jobs:
  - ${{ if contains(parameters.productName, 'CFX') }}:
      - job: Design
        displayName: Design
        steps:
        - task: PythonScript@0
          displayName: 'Plato Login for CFX'
          inputs:
            scriptPath: /home/thomas/plato/plato.py
            arguments: 'login -u ppareek -p Marvel@2020'
            pythonInterpreter: /usr/bin/python3
            workingDirectory: /home/thomas/plato/

        - task: PythonScript@0
          displayName: 'Plato Create Project for CFX'
          inputs:
            scriptPath: /home/thomas/plato/plato.py
            arguments: 'createProject -f NEF_NEF205_devops.xlsx -n myNEFProject -c NOK'
            pythonInterpreter: /usr/bin/python3

        - task: PythonScript@0
          displayName: 'Download XML for CFX'
          inputs:
            scriptPath: /home/thomas/plato/plato.py
            arguments: 'downloadConfiguration  -n myNEFProject -t nef.xml'
            pythonInterpreter: /usr/bin/python3

- stage: Deployment
  displayName: project Deployment
  jobs:
  - job: build
    displayName: 'trigger the deployment for '
    steps:
    - script: echo deployment started for  ${{ parameters.productName }}  and release ${{parameters.releaseName}}
