parameters:
- name: projectName
  displayName: Project Name
  type: string
  default: volte
  values:
  - volte
  - VoWifi
  - 5Gcore
  
- name: productName
  displayName: Product Name
  type: string
  default: CFX
  values:
  - CFX
  - TAS
  - NEF  
  
- name: releaseName
  displayName: release Name
  type: string
  default: 20.5
  values:
  - 20.5
  - 20.8
  - 21.0  
 

- name: designRequired
  type: boolean
  default: false
  
  
- name: deploymentRequired
  type: boolean
  default: false


trigger: none

stages:

- stage: Requirement
  displayName: project Requirement
  pool:
    name: default
  jobs:
  - job: requirement
    displayName: Requirement    
    steps:
    - script: echo starting  $(Build.BuildNumber) with ${{ parameters.projectName }}      

- ${{ if eq(parameters.designRequired, true) }}:   
    - stage: Design
      displayName: Design
      pool:
        name: default
      jobs:
      - ${{ if contains(parameters.productName, 'CFX') }}:
          - job: Design4CFX
            displayName: Design
            steps:
            - task: PythonScript@0
              displayName: 'Plato Login for CFX'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'login -u ppareek -p Marvel@2020'
                pythonInterpreter: /usr/bin/python3
                workingDirectory: /home/thomas/plato/

            - task: PythonScript@0
              displayName: 'Plato Create Project for CFX'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'createProject -f NEF_NEF205_devops.xlsx -n myNEFProject -c NOK'
                pythonInterpreter: /usr/bin/python3

            - task: PythonScript@0
              displayName: 'Download XML for CFX'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'downloadConfiguration  -n myNEFProject -t nef.xml'
                pythonInterpreter: /usr/bin/python3
                
      - ${{ if contains(parameters.productName, 'TAS') }}:
          - job: Design4TAS
            displayName: Design
            steps:
            - task: PythonScript@0
              displayName: 'Plato Login for TAS'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'login -u ppareek -p Marvel@2020'
                pythonInterpreter: /usr/bin/python3
                workingDirectory: /home/thomas/plato/

            - task: PythonScript@0
              displayName: 'Plato Create Project for TAS'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'createProject -f NEF_NEF205_devops.xlsx -n myNEFProject -c NOK'
                pythonInterpreter: /usr/bin/python3

            - task: PythonScript@0
              displayName: 'Download XML for TAS'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'downloadConfiguration  -n myNEFProject -t nef.xml'
                pythonInterpreter: /usr/bin/python3
                
      - ${{ if contains(parameters.productName, 'NEF') }}:
          - job: Design4NEF
            displayName: Design
            steps:
            - task: PythonScript@0
              displayName: 'Plato Login for NEF'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'login -u ppareek -p Marvel@2020'
                pythonInterpreter: /usr/bin/python3
                workingDirectory: /home/thomas/plato/

            - task: PythonScript@0
              displayName: 'Plato Create Project for NEF'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'createProject -f NEF_NEF205_devops.xlsx -n myNEFProject -c NOK'
                pythonInterpreter: /usr/bin/python3

            - task: PythonScript@0
              displayName: 'Download XML for NEF'
              inputs:
                scriptPath: /home/thomas/plato/plato.py
                arguments: 'downloadConfiguration  -n myNEFProject -t nef.xml'
                pythonInterpreter: /usr/bin/python3

- ${{ if eq(parameters.deploymentRequired, true) }}:
    - stage: Deployment
      displayName: project Deployment
      pool:
        name: default
      jobs:
      - job: build
        displayName: 'Depyment is required for  ${{ parameters.productName }}  and release ${{parameters.releaseName}}'
        steps:
        - script: echo deployment started for  ${{ parameters.productName }}  and release ${{parameters.releaseName}}
